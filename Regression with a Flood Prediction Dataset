{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5daafe17",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:10.637040Z",
     "iopub.status.busy": "2024-05-02T03:05:10.636374Z",
     "iopub.status.idle": "2024-05-02T03:05:12.983742Z",
     "shell.execute_reply": "2024-05-02T03:05:12.982315Z"
    },
    "papermill": {
     "duration": 2.361239,
     "end_time": "2024-05-02T03:05:12.987108",
     "exception": false,
     "start_time": "2024-05-02T03:05:10.625869",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "222216aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:13.005629Z",
     "iopub.status.busy": "2024-05-02T03:05:13.004396Z",
     "iopub.status.idle": "2024-05-02T03:05:17.334648Z",
     "shell.execute_reply": "2024-05-02T03:05:17.332517Z"
    },
    "papermill": {
     "duration": 4.343234,
     "end_time": "2024-05-02T03:05:17.338218",
     "exception": false,
     "start_time": "2024-05-02T03:05:12.994984",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1117957 entries, 0 to 1117956\n",
      "Data columns (total 22 columns):\n",
      " #   Column                           Non-Null Count    Dtype  \n",
      "---  ------                           --------------    -----  \n",
      " 0   id                               1117957 non-null  int64  \n",
      " 1   MonsoonIntensity                 1117957 non-null  int64  \n",
      " 2   TopographyDrainage               1117957 non-null  int64  \n",
      " 3   RiverManagement                  1117957 non-null  int64  \n",
      " 4   Deforestation                    1117957 non-null  int64  \n",
      " 5   Urbanization                     1117957 non-null  int64  \n",
      " 6   ClimateChange                    1117957 non-null  int64  \n",
      " 7   DamsQuality                      1117957 non-null  int64  \n",
      " 8   Siltation                        1117957 non-null  int64  \n",
      " 9   AgriculturalPractices            1117957 non-null  int64  \n",
      " 10  Encroachments                    1117957 non-null  int64  \n",
      " 11  IneffectiveDisasterPreparedness  1117957 non-null  int64  \n",
      " 12  DrainageSystems                  1117957 non-null  int64  \n",
      " 13  CoastalVulnerability             1117957 non-null  int64  \n",
      " 14  Landslides                       1117957 non-null  int64  \n",
      " 15  Watersheds                       1117957 non-null  int64  \n",
      " 16  DeterioratingInfrastructure      1117957 non-null  int64  \n",
      " 17  PopulationScore                  1117957 non-null  int64  \n",
      " 18  WetlandLoss                      1117957 non-null  int64  \n",
      " 19  InadequatePlanning               1117957 non-null  int64  \n",
      " 20  PoliticalFactors                 1117957 non-null  int64  \n",
      " 21  FloodProbability                 1117957 non-null  float64\n",
      "dtypes: float64(1), int64(21)\n",
      "memory usage: 187.6 MB\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 745305 entries, 0 to 745304\n",
      "Data columns (total 21 columns):\n",
      " #   Column                           Non-Null Count   Dtype\n",
      "---  ------                           --------------   -----\n",
      " 0   id                               745305 non-null  int64\n",
      " 1   MonsoonIntensity                 745305 non-null  int64\n",
      " 2   TopographyDrainage               745305 non-null  int64\n",
      " 3   RiverManagement                  745305 non-null  int64\n",
      " 4   Deforestation                    745305 non-null  int64\n",
      " 5   Urbanization                     745305 non-null  int64\n",
      " 6   ClimateChange                    745305 non-null  int64\n",
      " 7   DamsQuality                      745305 non-null  int64\n",
      " 8   Siltation                        745305 non-null  int64\n",
      " 9   AgriculturalPractices            745305 non-null  int64\n",
      " 10  Encroachments                    745305 non-null  int64\n",
      " 11  IneffectiveDisasterPreparedness  745305 non-null  int64\n",
      " 12  DrainageSystems                  745305 non-null  int64\n",
      " 13  CoastalVulnerability             745305 non-null  int64\n",
      " 14  Landslides                       745305 non-null  int64\n",
      " 15  Watersheds                       745305 non-null  int64\n",
      " 16  DeterioratingInfrastructure      745305 non-null  int64\n",
      " 17  PopulationScore                  745305 non-null  int64\n",
      " 18  WetlandLoss                      745305 non-null  int64\n",
      " 19  InadequatePlanning               745305 non-null  int64\n",
      " 20  PoliticalFactors                 745305 non-null  int64\n",
      "dtypes: int64(21)\n",
      "memory usage: 119.4 MB\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(None, None)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_ds=pd.read_csv('/kaggle/input/playground-series-s4e5/train.csv')\n",
    "test_ds=pd.read_csv('/kaggle/input/playground-series-s4e5/test.csv')\n",
    "train_ds.info(), test_ds.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8c31c204",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:17.355360Z",
     "iopub.status.busy": "2024-05-02T03:05:17.354909Z",
     "iopub.status.idle": "2024-05-02T03:05:17.405606Z",
     "shell.execute_reply": "2024-05-02T03:05:17.404156Z"
    },
    "papermill": {
     "duration": 0.062413,
     "end_time": "2024-05-02T03:05:17.408353",
     "exception": false,
     "start_time": "2024-05-02T03:05:17.345940",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count = np.isinf(train_ds).values.sum() \n",
    "count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d2b6c168",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:17.426132Z",
     "iopub.status.busy": "2024-05-02T03:05:17.425710Z",
     "iopub.status.idle": "2024-05-02T03:05:17.924942Z",
     "shell.execute_reply": "2024-05-02T03:05:17.923697Z"
    },
    "papermill": {
     "duration": 0.511778,
     "end_time": "2024-05-02T03:05:17.928098",
     "exception": false,
     "start_time": "2024-05-02T03:05:17.416320",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>MonsoonIntensity</th>\n",
       "      <th>TopographyDrainage</th>\n",
       "      <th>RiverManagement</th>\n",
       "      <th>Deforestation</th>\n",
       "      <th>Urbanization</th>\n",
       "      <th>ClimateChange</th>\n",
       "      <th>DamsQuality</th>\n",
       "      <th>Siltation</th>\n",
       "      <th>AgriculturalPractices</th>\n",
       "      <th>...</th>\n",
       "      <th>DrainageSystems</th>\n",
       "      <th>CoastalVulnerability</th>\n",
       "      <th>Landslides</th>\n",
       "      <th>Watersheds</th>\n",
       "      <th>DeterioratingInfrastructure</th>\n",
       "      <th>PopulationScore</th>\n",
       "      <th>WetlandLoss</th>\n",
       "      <th>InadequatePlanning</th>\n",
       "      <th>PoliticalFactors</th>\n",
       "      <th>FloodProbability</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0.445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>0.450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>0.535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>0.415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1117952</th>\n",
       "      <td>1117952</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0.495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1117953</th>\n",
       "      <td>1117953</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0.480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1117954</th>\n",
       "      <td>1117954</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0.485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1117955</th>\n",
       "      <td>1117955</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0.495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1117956</th>\n",
       "      <td>1117956</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>0.560</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1117957 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              id  MonsoonIntensity  TopographyDrainage  RiverManagement  \\\n",
       "0              0                 5                   8                5   \n",
       "1              1                 6                   7                4   \n",
       "2              2                 6                   5                6   \n",
       "3              3                 3                   4                6   \n",
       "4              4                 5                   3                2   \n",
       "...          ...               ...                 ...              ...   \n",
       "1117952  1117952                 3                   3                4   \n",
       "1117953  1117953                 2                   2                4   \n",
       "1117954  1117954                 7                   3                9   \n",
       "1117955  1117955                 7                   3                3   \n",
       "1117956  1117956                 4                   5                6   \n",
       "\n",
       "         Deforestation  Urbanization  ClimateChange  DamsQuality  Siltation  \\\n",
       "0                    8             6              4            4          3   \n",
       "1                    4             8              8            3          5   \n",
       "2                    7             3              7            1          5   \n",
       "3                    5             4              8            4          7   \n",
       "4                    6             4              4            3          3   \n",
       "...                ...           ...            ...          ...        ...   \n",
       "1117952             10             4              5            5          7   \n",
       "1117953              3             9              5            8          1   \n",
       "1117954              4             6              5            9          1   \n",
       "1117955              7             5              2            3          4   \n",
       "1117956              9             5              5            2          8   \n",
       "\n",
       "         AgriculturalPractices  ...  DrainageSystems  CoastalVulnerability  \\\n",
       "0                            3  ...                5                     3   \n",
       "1                            4  ...                7                     2   \n",
       "2                            4  ...                7                     3   \n",
       "3                            6  ...                2                     4   \n",
       "4                            3  ...                2                     2   \n",
       "...                        ...  ...              ...                   ...   \n",
       "1117952                     10  ...                7                     8   \n",
       "1117953                      3  ...                9                     4   \n",
       "1117954                      3  ...                5                     5   \n",
       "1117955                      6  ...                6                     8   \n",
       "1117956                      4  ...                4                     8   \n",
       "\n",
       "         Landslides  Watersheds  DeterioratingInfrastructure  PopulationScore  \\\n",
       "0                 3           5                            4                7   \n",
       "1                 0           3                            5                3   \n",
       "2                 7           5                            6                8   \n",
       "3                 7           4                            4                6   \n",
       "4                 6           6                            4                1   \n",
       "...             ...         ...                          ...              ...   \n",
       "1117952           7           2                            2                1   \n",
       "1117953           4           3                            7                4   \n",
       "1117954           5           5                            6                5   \n",
       "1117955           5           3                            4                6   \n",
       "1117956           6           5                            5                6   \n",
       "\n",
       "         WetlandLoss  InadequatePlanning  PoliticalFactors  FloodProbability  \n",
       "0                  5                   7                 3             0.445  \n",
       "1                  3                   4                 3             0.450  \n",
       "2                  2                   3                 3             0.530  \n",
       "3                  5                   7                 5             0.535  \n",
       "4                  2                   3                 5             0.415  \n",
       "...              ...                 ...               ...               ...  \n",
       "1117952            4                   6                 4             0.495  \n",
       "1117953            9                   4                 5             0.480  \n",
       "1117954            5                   2                 4             0.485  \n",
       "1117955            7                   6                 4             0.495  \n",
       "1117956            7                   7                 8             0.560  \n",
       "\n",
       "[1117957 rows x 22 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_ds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "453baad0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:17.947449Z",
     "iopub.status.busy": "2024-05-02T03:05:17.946992Z",
     "iopub.status.idle": "2024-05-02T03:05:17.980863Z",
     "shell.execute_reply": "2024-05-02T03:05:17.979572Z"
    },
    "papermill": {
     "duration": 0.048949,
     "end_time": "2024-05-02T03:05:17.985631",
     "exception": false,
     "start_time": "2024-05-02T03:05:17.936682",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                                 0\n",
       "MonsoonIntensity                   0\n",
       "TopographyDrainage                 0\n",
       "RiverManagement                    0\n",
       "Deforestation                      0\n",
       "Urbanization                       0\n",
       "ClimateChange                      0\n",
       "DamsQuality                        0\n",
       "Siltation                          0\n",
       "AgriculturalPractices              0\n",
       "Encroachments                      0\n",
       "IneffectiveDisasterPreparedness    0\n",
       "DrainageSystems                    0\n",
       "CoastalVulnerability               0\n",
       "Landslides                         0\n",
       "Watersheds                         0\n",
       "DeterioratingInfrastructure        0\n",
       "PopulationScore                    0\n",
       "WetlandLoss                        0\n",
       "InadequatePlanning                 0\n",
       "PoliticalFactors                   0\n",
       "FloodProbability                   0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_ds.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "807ec1a1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:18.006078Z",
     "iopub.status.busy": "2024-05-02T03:05:18.005634Z",
     "iopub.status.idle": "2024-05-02T03:05:19.634572Z",
     "shell.execute_reply": "2024-05-02T03:05:19.633084Z"
    },
    "papermill": {
     "duration": 1.642811,
     "end_time": "2024-05-02T03:05:19.637379",
     "exception": false,
     "start_time": "2024-05-02T03:05:17.994568",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "MonsoonIntensity                   0.189098\n",
       "TopographyDrainage                 0.187635\n",
       "RiverManagement                    0.187131\n",
       "Deforestation                      0.184001\n",
       "Urbanization                       0.180861\n",
       "ClimateChange                      0.184761\n",
       "DamsQuality                        0.187996\n",
       "Siltation                          0.186789\n",
       "AgriculturalPractices              0.183366\n",
       "Encroachments                      0.178841\n",
       "IneffectiveDisasterPreparedness    0.183109\n",
       "DrainageSystems                    0.179305\n",
       "CoastalVulnerability               0.177774\n",
       "Landslides                         0.185346\n",
       "Watersheds                         0.181907\n",
       "DeterioratingInfrastructure        0.190007\n",
       "PopulationScore                    0.185890\n",
       "WetlandLoss                        0.183396\n",
       "InadequatePlanning                 0.180968\n",
       "PoliticalFactors                   0.182417\n",
       "FloodProbability                   1.000000\n",
       "Name: FloodProbability, dtype: float64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_ds[train_ds.columns[1:]].corr()['FloodProbability'][ : ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8b4aa84c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:19.658487Z",
     "iopub.status.busy": "2024-05-02T03:05:19.657374Z",
     "iopub.status.idle": "2024-05-02T03:05:19.824557Z",
     "shell.execute_reply": "2024-05-02T03:05:19.823342Z"
    },
    "papermill": {
     "duration": 0.181028,
     "end_time": "2024-05-02T03:05:19.827739",
     "exception": false,
     "start_time": "2024-05-02T03:05:19.646711",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_ds=train_ds.drop(['id'],axis=1)\n",
    "test_ds=test_ds.drop(['id'],axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "77a0f992",
   "metadata": {
    "papermill": {
     "duration": 0.008946,
     "end_time": "2024-05-02T03:05:19.846096",
     "exception": false,
     "start_time": "2024-05-02T03:05:19.837150",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Memory  optimization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a690f6e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:19.866462Z",
     "iopub.status.busy": "2024-05-02T03:05:19.865965Z",
     "iopub.status.idle": "2024-05-02T03:05:19.874804Z",
     "shell.execute_reply": "2024-05-02T03:05:19.873665Z"
    },
    "papermill": {
     "duration": 0.022629,
     "end_time": "2024-05-02T03:05:19.877923",
     "exception": false,
     "start_time": "2024-05-02T03:05:19.855294",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "memory usage before optimization :179.12 MB\n"
     ]
    }
   ],
   "source": [
    "memory_usage=train_ds.memory_usage().sum()/1024**2\n",
    "print(\"memory usage before optimization :{:.2f} MB\".format(memory_usage))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c26fd964",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:19.899858Z",
     "iopub.status.busy": "2024-05-02T03:05:19.899418Z",
     "iopub.status.idle": "2024-05-02T03:05:19.908594Z",
     "shell.execute_reply": "2024-05-02T03:05:19.907289Z"
    },
    "papermill": {
     "duration": 0.022414,
     "end_time": "2024-05-02T03:05:19.911006",
     "exception": false,
     "start_time": "2024-05-02T03:05:19.888592",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "memory usage before optimization :113.72 MB\n"
     ]
    }
   ],
   "source": [
    "memory_usage=test_ds.memory_usage().sum()/1024**2\n",
    "print(\"memory usage before optimization :{:.2f} MB\".format(memory_usage))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e4bcd84c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:19.932286Z",
     "iopub.status.busy": "2024-05-02T03:05:19.931864Z",
     "iopub.status.idle": "2024-05-02T03:05:19.947013Z",
     "shell.execute_reply": "2024-05-02T03:05:19.945925Z"
    },
    "papermill": {
     "duration": 0.028787,
     "end_time": "2024-05-02T03:05:19.949356",
     "exception": false,
     "start_time": "2024-05-02T03:05:19.920569",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def memory_optimization(data_frame):\n",
    "    memory_usage=data_frame.memory_usage().sum()/1024**2\n",
    "    cols=data_frame.columns\n",
    "    for col in cols:\n",
    "        column_type=data_frame[col].dtype\n",
    "        \n",
    "        if column_type !=object:\n",
    "            col_min=data_frame[col].min()\n",
    "            col_max=data_frame[col].max()\n",
    "            if str(column_type)[:3]=='int':\n",
    "                if col_min > np.iinfo(np.int8).min and col_max< np.iinfo(np.int8).max:\n",
    "                    data_frame[col]=data_frame[col].astype(np.int8)\n",
    "                elif col_min > np.iinfo(np.int16).min and col_max< np.iinfo(np.int16).max:\n",
    "                    data_frame[col]=data_frame[col].astype(np.int16)\n",
    "                elif col_min > np.iinfo(np.int32).min and col_max< np.iinfo(np.int32).max:\n",
    "                    data_frame[col]=data_frame[col].astype(np.int32)\n",
    "                elif col_min > np.iinfo(np.int64).min and col_max< np.iinfo(np.int64).max:\n",
    "                    data_frame[col]=data_frame[col].astype(np.int64)\n",
    "            else:\n",
    "                if col_min > np.finfo(np.float16).min and col_max< np.finfo(np.float16).max:\n",
    "                    data_frame[col]=data_frame[col].astype(np.float16)\n",
    "                elif col_min > np.finfo(np.float32).min and col_max< np.finfo(np.float32).max:\n",
    "                    data_frame[col]=data_frame[col].astype(np.float32)\n",
    "                else:\n",
    "                    data_frame[col]=data_frame[col].astype(np.float64)\n",
    "        else:\n",
    "            data_frame[col]=data_frame[col].astype('object')\n",
    "    mem_usage=data_frame.memory_usage().sum()/1024**2\n",
    "    print(\"memory usage after optimization is: {:.2f} MB\".format(mem_usage))\n",
    "    print(\"memory usage reduce by: {:.2f}%\".format(100*(memory_usage-mem_usage)/memory_usage))\n",
    "    \n",
    "    return data_frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f2621940",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:19.970582Z",
     "iopub.status.busy": "2024-05-02T03:05:19.970139Z",
     "iopub.status.idle": "2024-05-02T03:05:20.058168Z",
     "shell.execute_reply": "2024-05-02T03:05:20.057322Z"
    },
    "papermill": {
     "duration": 0.101583,
     "end_time": "2024-05-02T03:05:20.060614",
     "exception": false,
     "start_time": "2024-05-02T03:05:19.959031",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "memory usage after optimization is: 23.46 MB\n",
      "memory usage reduce by: 86.90%\n"
     ]
    }
   ],
   "source": [
    "train=memory_optimization(train_ds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "57348b5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:20.082849Z",
     "iopub.status.busy": "2024-05-02T03:05:20.082191Z",
     "iopub.status.idle": "2024-05-02T03:05:20.140809Z",
     "shell.execute_reply": "2024-05-02T03:05:20.139504Z"
    },
    "papermill": {
     "duration": 0.073007,
     "end_time": "2024-05-02T03:05:20.143660",
     "exception": false,
     "start_time": "2024-05-02T03:05:20.070653",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "memory usage after optimization is: 14.22 MB\n",
      "memory usage reduce by: 87.50%\n"
     ]
    }
   ],
   "source": [
    "test=memory_optimization(test_ds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a9f370d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:20.165862Z",
     "iopub.status.busy": "2024-05-02T03:05:20.165460Z",
     "iopub.status.idle": "2024-05-02T03:05:20.258576Z",
     "shell.execute_reply": "2024-05-02T03:05:20.257174Z"
    },
    "papermill": {
     "duration": 0.10797,
     "end_time": "2024-05-02T03:05:20.261815",
     "exception": false,
     "start_time": "2024-05-02T03:05:20.153845",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "target=train['FloodProbability']\n",
    "train=train.drop(['FloodProbability'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "742a8d46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:20.284070Z",
     "iopub.status.busy": "2024-05-02T03:05:20.283662Z",
     "iopub.status.idle": "2024-05-02T03:05:20.293248Z",
     "shell.execute_reply": "2024-05-02T03:05:20.292436Z"
    },
    "papermill": {
     "duration": 0.023406,
     "end_time": "2024-05-02T03:05:20.295428",
     "exception": false,
     "start_time": "2024-05-02T03:05:20.272022",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0          0.445068\n",
       "1          0.449951\n",
       "2          0.529785\n",
       "3          0.535156\n",
       "4          0.415039\n",
       "             ...   \n",
       "1117952    0.495117\n",
       "1117953    0.479980\n",
       "1117954    0.485107\n",
       "1117955    0.495117\n",
       "1117956    0.560059\n",
       "Name: FloodProbability, Length: 1117957, dtype: float16"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "62a003e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:20.318455Z",
     "iopub.status.busy": "2024-05-02T03:05:20.318045Z",
     "iopub.status.idle": "2024-05-02T03:05:21.431834Z",
     "shell.execute_reply": "2024-05-02T03:05:21.430496Z"
    },
    "papermill": {
     "duration": 1.129044,
     "end_time": "2024-05-02T03:05:21.435144",
     "exception": false,
     "start_time": "2024-05-02T03:05:20.306100",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor, AdaBoostRegressor, GradientBoostingRegressor\n",
    "from catboost import CatBoostRegressor\n",
    "from sklearn.datasets import make_regression\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "ed399cf9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:21.458660Z",
     "iopub.status.busy": "2024-05-02T03:05:21.458166Z",
     "iopub.status.idle": "2024-05-02T03:05:21.774165Z",
     "shell.execute_reply": "2024-05-02T03:05:21.772595Z"
    },
    "papermill": {
     "duration": 0.331804,
     "end_time": "2024-05-02T03:05:21.777490",
     "exception": false,
     "start_time": "2024-05-02T03:05:21.445686",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(train, target, test_size=0.2, random_state=42)\n",
    "rf = RandomForestRegressor(n_estimators=100, random_state=42)\n",
    "ada = AdaBoostRegressor(n_estimators=100, random_state=42)\n",
    "gb = GradientBoostingRegressor(n_estimators=100, random_state=42)\n",
    "cat = CatBoostRegressor(iterations=100, learning_rate=0.1, random_state=42, verbose=0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2a7ee052",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:05:21.801881Z",
     "iopub.status.busy": "2024-05-02T03:05:21.800537Z",
     "iopub.status.idle": "2024-05-02T03:30:01.950879Z",
     "shell.execute_reply": "2024-05-02T03:30:01.949412Z"
    },
    "papermill": {
     "duration": 1480.174871,
     "end_time": "2024-05-02T03:30:01.963261",
     "exception": false,
     "start_time": "2024-05-02T03:05:21.788390",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/numpy/lib/function_base.py:522: RuntimeWarning: overflow encountered in cast\n",
      "  scl = avg_as_array.dtype.type(a.size/avg_as_array.size)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<catboost.core.CatBoostRegressor at 0x7fa7b0a14ee0>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf.fit(X_train, y_train)\n",
    "ada.fit(X_train, y_train) \n",
    "gb.fit(X_train, y_train)\n",
    "cat.fit(X_train, y_train)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "9276ffeb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:30:01.987000Z",
     "iopub.status.busy": "2024-05-02T03:30:01.986586Z",
     "iopub.status.idle": "2024-05-02T03:30:26.731555Z",
     "shell.execute_reply": "2024-05-02T03:30:26.730335Z"
    },
    "papermill": {
     "duration": 24.760584,
     "end_time": "2024-05-02T03:30:26.734611",
     "exception": false,
     "start_time": "2024-05-02T03:30:01.974027",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "rf_pred = rf.predict(X_test)\n",
    "ada_pred = ada.predict(X_test)\n",
    "gb_pred = gb.predict(X_test)\n",
    "cat_pred = cat.predict(X_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "cfd95dff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:30:26.758586Z",
     "iopub.status.busy": "2024-05-02T03:30:26.757934Z",
     "iopub.status.idle": "2024-05-02T03:30:26.766961Z",
     "shell.execute_reply": "2024-05-02T03:30:26.765731Z"
    },
    "papermill": {
     "duration": 0.023846,
     "end_time": "2024-05-02T03:30:26.769291",
     "exception": false,
     "start_time": "2024-05-02T03:30:26.745445",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([0.51789307, 0.53150879, 0.53094971, ..., 0.51671387, 0.48656494,\n",
       "        0.51625977]),\n",
       " array([0.52321768, 0.5857315 , 0.55747952, ..., 0.54211565, 0.50027357,\n",
       "        0.52075918]),\n",
       " array([0.52644746, 0.53285575, 0.52821566, ..., 0.51148161, 0.50086037,\n",
       "        0.51145691]),\n",
       " array([0.52731241, 0.56038134, 0.52556248, ..., 0.52342552, 0.49580122,\n",
       "        0.50763541]))"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_pred,ada_pred,gb_pred,cat_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "7c0d35f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:30:26.792852Z",
     "iopub.status.busy": "2024-05-02T03:30:26.792337Z",
     "iopub.status.idle": "2024-05-02T03:30:26.822880Z",
     "shell.execute_reply": "2024-05-02T03:30:26.820951Z"
    },
    "papermill": {
     "duration": 0.045632,
     "end_time": "2024-05-02T03:30:26.825487",
     "exception": false,
     "start_time": "2024-05-02T03:30:26.779855",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "rf Mean Squared Error: 0.0008944333847660526\n",
      "ada Mean Squared Error: 0.0010779311182171059\n",
      "gb Mean Squared Error: 0.0010023522426631348\n",
      "cat Mean Squared Error: 0.0006180235250844109\n"
     ]
    }
   ],
   "source": [
    "rf_mse = mean_squared_error(y_test, rf_pred)\n",
    "print(\"rf Mean Squared Error:\", rf_mse)\n",
    "\n",
    "ada_mse = mean_squared_error(y_test, ada_pred)\n",
    "print(\"ada Mean Squared Error:\", ada_mse)\n",
    "\n",
    "gb_mse = mean_squared_error(y_test, gb_pred)\n",
    "print(\"gb Mean Squared Error:\", gb_mse)\n",
    "\n",
    "cat_mse = mean_squared_error(y_test, cat_pred)\n",
    "print(\"cat Mean Squared Error:\", cat_mse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "35d08700",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:30:26.850163Z",
     "iopub.status.busy": "2024-05-02T03:30:26.849689Z",
     "iopub.status.idle": "2024-05-02T03:30:26.976645Z",
     "shell.execute_reply": "2024-05-02T03:30:26.975223Z"
    },
    "papermill": {
     "duration": 0.143154,
     "end_time": "2024-05-02T03:30:26.979843",
     "exception": false,
     "start_time": "2024-05-02T03:30:26.836689",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.56003838, 0.47066791, 0.47016006, ..., 0.58190104, 0.54314524,\n",
       "       0.50068789])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions = cat.predict(test)\n",
    "predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "05556323",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:30:27.006692Z",
     "iopub.status.busy": "2024-05-02T03:30:27.006189Z",
     "iopub.status.idle": "2024-05-02T03:30:27.295487Z",
     "shell.execute_reply": "2024-05-02T03:30:27.294317Z"
    },
    "papermill": {
     "duration": 0.30706,
     "end_time": "2024-05-02T03:30:27.298626",
     "exception": false,
     "start_time": "2024-05-02T03:30:26.991566",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>FloodProbability</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1117957</td>\n",
       "      <td>0.560038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1117958</td>\n",
       "      <td>0.470668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1117959</td>\n",
       "      <td>0.470160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1117960</td>\n",
       "      <td>0.474698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1117961</td>\n",
       "      <td>0.476059</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>745300</th>\n",
       "      <td>1863257</td>\n",
       "      <td>0.488783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>745301</th>\n",
       "      <td>1863258</td>\n",
       "      <td>0.446535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>745302</th>\n",
       "      <td>1863259</td>\n",
       "      <td>0.581901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>745303</th>\n",
       "      <td>1863260</td>\n",
       "      <td>0.543145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>745304</th>\n",
       "      <td>1863261</td>\n",
       "      <td>0.500688</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>745305 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id  FloodProbability\n",
       "0       1117957          0.560038\n",
       "1       1117958          0.470668\n",
       "2       1117959          0.470160\n",
       "3       1117960          0.474698\n",
       "4       1117961          0.476059\n",
       "...         ...               ...\n",
       "745300  1863257          0.488783\n",
       "745301  1863258          0.446535\n",
       "745302  1863259          0.581901\n",
       "745303  1863260          0.543145\n",
       "745304  1863261          0.500688\n",
       "\n",
       "[745305 rows x 2 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "submission=pd.read_csv('/kaggle/input/playground-series-s4e5/sample_submission.csv')\n",
    "submission=submission.drop(['FloodProbability'],axis=1)\n",
    "submission['FloodProbability']=pd.DataFrame(predictions)\n",
    "submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "17057ca6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-02T03:30:27.325747Z",
     "iopub.status.busy": "2024-05-02T03:30:27.324926Z",
     "iopub.status.idle": "2024-05-02T03:30:29.793706Z",
     "shell.execute_reply": "2024-05-02T03:30:29.792262Z"
    },
    "papermill": {
     "duration": 2.485863,
     "end_time": "2024-05-02T03:30:29.796829",
     "exception": false,
     "start_time": "2024-05-02T03:30:27.310966",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "submission.to_csv('Submission.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a9cc8f7",
   "metadata": {
    "papermill": {
     "duration": 0.012167,
     "end_time": "2024-05-02T03:30:29.821093",
     "exception": false,
     "start_time": "2024-05-02T03:30:29.808926",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b463699a",
   "metadata": {
    "papermill": {
     "duration": 0.011857,
     "end_time": "2024-05-02T03:30:29.844848",
     "exception": false,
     "start_time": "2024-05-02T03:30:29.832991",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 8121328,
     "sourceId": 73278,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 1523.588119,
   "end_time": "2024-05-02T03:30:31.088766",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-02T03:05:07.500647",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
