{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":73278,"databundleVersionId":8121328,"sourceType":"competition"}],"dockerImageVersionId":30698,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport seaborn as sns","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-05-04T04:26:04.000128Z","iopub.execute_input":"2024-05-04T04:26:04.000545Z","iopub.status.idle":"2024-05-04T04:26:06.589589Z","shell.execute_reply.started":"2024-05-04T04:26:04.000511Z","shell.execute_reply":"2024-05-04T04:26:06.588314Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"train_ds=pd.read_csv('/kaggle/input/playground-series-s4e5/train.csv')\ntest_ds=pd.read_csv('/kaggle/input/playground-series-s4e5/test.csv')\ntrain_ds.info(), test_ds.info()","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:06.591765Z","iopub.execute_input":"2024-05-04T04:26:06.592223Z","iopub.status.idle":"2024-05-04T04:26:11.102415Z","shell.execute_reply.started":"2024-05-04T04:26:06.592194Z","shell.execute_reply":"2024-05-04T04:26:11.101265Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1117957 entries, 0 to 1117956\nData columns (total 22 columns):\n #   Column                           Non-Null Count    Dtype  \n---  ------                           --------------    -----  \n 0   id                               1117957 non-null  int64  \n 1   MonsoonIntensity                 1117957 non-null  int64  \n 2   TopographyDrainage               1117957 non-null  int64  \n 3   RiverManagement                  1117957 non-null  int64  \n 4   Deforestation                    1117957 non-null  int64  \n 5   Urbanization                     1117957 non-null  int64  \n 6   ClimateChange                    1117957 non-null  int64  \n 7   DamsQuality                      1117957 non-null  int64  \n 8   Siltation                        1117957 non-null  int64  \n 9   AgriculturalPractices            1117957 non-null  int64  \n 10  Encroachments                    1117957 non-null  int64  \n 11  IneffectiveDisasterPreparedness  1117957 non-null  int64  \n 12  DrainageSystems                  1117957 non-null  int64  \n 13  CoastalVulnerability             1117957 non-null  int64  \n 14  Landslides                       1117957 non-null  int64  \n 15  Watersheds                       1117957 non-null  int64  \n 16  DeterioratingInfrastructure      1117957 non-null  int64  \n 17  PopulationScore                  1117957 non-null  int64  \n 18  WetlandLoss                      1117957 non-null  int64  \n 19  InadequatePlanning               1117957 non-null  int64  \n 20  PoliticalFactors                 1117957 non-null  int64  \n 21  FloodProbability                 1117957 non-null  float64\ndtypes: float64(1), int64(21)\nmemory usage: 187.6 MB\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 745305 entries, 0 to 745304\nData columns (total 21 columns):\n #   Column                           Non-Null Count   Dtype\n---  ------                           --------------   -----\n 0   id                               745305 non-null  int64\n 1   MonsoonIntensity                 745305 non-null  int64\n 2   TopographyDrainage               745305 non-null  int64\n 3   RiverManagement                  745305 non-null  int64\n 4   Deforestation                    745305 non-null  int64\n 5   Urbanization                     745305 non-null  int64\n 6   ClimateChange                    745305 non-null  int64\n 7   DamsQuality                      745305 non-null  int64\n 8   Siltation                        745305 non-null  int64\n 9   AgriculturalPractices            745305 non-null  int64\n 10  Encroachments                    745305 non-null  int64\n 11  IneffectiveDisasterPreparedness  745305 non-null  int64\n 12  DrainageSystems                  745305 non-null  int64\n 13  CoastalVulnerability             745305 non-null  int64\n 14  Landslides                       745305 non-null  int64\n 15  Watersheds                       745305 non-null  int64\n 16  DeterioratingInfrastructure      745305 non-null  int64\n 17  PopulationScore                  745305 non-null  int64\n 18  WetlandLoss                      745305 non-null  int64\n 19  InadequatePlanning               745305 non-null  int64\n 20  PoliticalFactors                 745305 non-null  int64\ndtypes: int64(21)\nmemory usage: 119.4 MB\n","output_type":"stream"},{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"(None, None)"},"metadata":{}}]},{"cell_type":"code","source":"count = np.isinf(train_ds).values.sum() \ncount","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:11.103900Z","iopub.execute_input":"2024-05-04T04:26:11.104765Z","iopub.status.idle":"2024-05-04T04:26:11.144912Z","shell.execute_reply.started":"2024-05-04T04:26:11.104704Z","shell.execute_reply":"2024-05-04T04:26:11.143817Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"code","source":"train_ds","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:11.147996Z","iopub.execute_input":"2024-05-04T04:26:11.148449Z","iopub.status.idle":"2024-05-04T04:26:11.464988Z","shell.execute_reply.started":"2024-05-04T04:26:11.148407Z","shell.execute_reply":"2024-05-04T04:26:11.463812Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"              id  MonsoonIntensity  TopographyDrainage  RiverManagement  \\\n0              0                 5                   8                5   \n1              1                 6                   7                4   \n2              2                 6                   5                6   \n3              3                 3                   4                6   \n4              4                 5                   3                2   \n...          ...               ...                 ...              ...   \n1117952  1117952                 3                   3                4   \n1117953  1117953                 2                   2                4   \n1117954  1117954                 7                   3                9   \n1117955  1117955                 7                   3                3   \n1117956  1117956                 4                   5                6   \n\n         Deforestation  Urbanization  ClimateChange  DamsQuality  Siltation  \\\n0                    8             6              4            4          3   \n1                    4             8              8            3          5   \n2                    7             3              7            1          5   \n3                    5             4              8            4          7   \n4                    6             4              4            3          3   \n...                ...           ...            ...          ...        ...   \n1117952             10             4              5            5          7   \n1117953              3             9              5            8          1   \n1117954              4             6              5            9          1   \n1117955              7             5              2            3          4   \n1117956              9             5              5            2          8   \n\n         AgriculturalPractices  ...  DrainageSystems  CoastalVulnerability  \\\n0                            3  ...                5                     3   \n1                            4  ...                7                     2   \n2                            4  ...                7                     3   \n3                            6  ...                2                     4   \n4                            3  ...                2                     2   \n...                        ...  ...              ...                   ...   \n1117952                     10  ...                7                     8   \n1117953                      3  ...                9                     4   \n1117954                      3  ...                5                     5   \n1117955                      6  ...                6                     8   \n1117956                      4  ...                4                     8   \n\n         Landslides  Watersheds  DeterioratingInfrastructure  PopulationScore  \\\n0                 3           5                            4                7   \n1                 0           3                            5                3   \n2                 7           5                            6                8   \n3                 7           4                            4                6   \n4                 6           6                            4                1   \n...             ...         ...                          ...              ...   \n1117952           7           2                            2                1   \n1117953           4           3                            7                4   \n1117954           5           5                            6                5   \n1117955           5           3                            4                6   \n1117956           6           5                            5                6   \n\n         WetlandLoss  InadequatePlanning  PoliticalFactors  FloodProbability  \n0                  5                   7                 3             0.445  \n1                  3                   4                 3             0.450  \n2                  2                   3                 3             0.530  \n3                  5                   7                 5             0.535  \n4                  2                   3                 5             0.415  \n...              ...                 ...               ...               ...  \n1117952            4                   6                 4             0.495  \n1117953            9                   4                 5             0.480  \n1117954            5                   2                 4             0.485  \n1117955            7                   6                 4             0.495  \n1117956            7                   7                 8             0.560  \n\n[1117957 rows x 22 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>MonsoonIntensity</th>\n      <th>TopographyDrainage</th>\n      <th>RiverManagement</th>\n      <th>Deforestation</th>\n      <th>Urbanization</th>\n      <th>ClimateChange</th>\n      <th>DamsQuality</th>\n      <th>Siltation</th>\n      <th>AgriculturalPractices</th>\n      <th>...</th>\n      <th>DrainageSystems</th>\n      <th>CoastalVulnerability</th>\n      <th>Landslides</th>\n      <th>Watersheds</th>\n      <th>DeterioratingInfrastructure</th>\n      <th>PopulationScore</th>\n      <th>WetlandLoss</th>\n      <th>InadequatePlanning</th>\n      <th>PoliticalFactors</th>\n      <th>FloodProbability</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>5</td>\n      <td>8</td>\n      <td>5</td>\n      <td>8</td>\n      <td>6</td>\n      <td>4</td>\n      <td>4</td>\n      <td>3</td>\n      <td>3</td>\n      <td>...</td>\n      <td>5</td>\n      <td>3</td>\n      <td>3</td>\n      <td>5</td>\n      <td>4</td>\n      <td>7</td>\n      <td>5</td>\n      <td>7</td>\n      <td>3</td>\n      <td>0.445</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>6</td>\n      <td>7</td>\n      <td>4</td>\n      <td>4</td>\n      <td>8</td>\n      <td>8</td>\n      <td>3</td>\n      <td>5</td>\n      <td>4</td>\n      <td>...</td>\n      <td>7</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>5</td>\n      <td>3</td>\n      <td>3</td>\n      <td>4</td>\n      <td>3</td>\n      <td>0.450</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>6</td>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>3</td>\n      <td>7</td>\n      <td>1</td>\n      <td>5</td>\n      <td>4</td>\n      <td>...</td>\n      <td>7</td>\n      <td>3</td>\n      <td>7</td>\n      <td>5</td>\n      <td>6</td>\n      <td>8</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>0.530</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>3</td>\n      <td>4</td>\n      <td>6</td>\n      <td>5</td>\n      <td>4</td>\n      <td>8</td>\n      <td>4</td>\n      <td>7</td>\n      <td>6</td>\n      <td>...</td>\n      <td>2</td>\n      <td>4</td>\n      <td>7</td>\n      <td>4</td>\n      <td>4</td>\n      <td>6</td>\n      <td>5</td>\n      <td>7</td>\n      <td>5</td>\n      <td>0.535</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>5</td>\n      <td>3</td>\n      <td>2</td>\n      <td>6</td>\n      <td>4</td>\n      <td>4</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>...</td>\n      <td>2</td>\n      <td>2</td>\n      <td>6</td>\n      <td>6</td>\n      <td>4</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>5</td>\n      <td>0.415</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1117952</th>\n      <td>1117952</td>\n      <td>3</td>\n      <td>3</td>\n      <td>4</td>\n      <td>10</td>\n      <td>4</td>\n      <td>5</td>\n      <td>5</td>\n      <td>7</td>\n      <td>10</td>\n      <td>...</td>\n      <td>7</td>\n      <td>8</td>\n      <td>7</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4</td>\n      <td>6</td>\n      <td>4</td>\n      <td>0.495</td>\n    </tr>\n    <tr>\n      <th>1117953</th>\n      <td>1117953</td>\n      <td>2</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3</td>\n      <td>9</td>\n      <td>5</td>\n      <td>8</td>\n      <td>1</td>\n      <td>3</td>\n      <td>...</td>\n      <td>9</td>\n      <td>4</td>\n      <td>4</td>\n      <td>3</td>\n      <td>7</td>\n      <td>4</td>\n      <td>9</td>\n      <td>4</td>\n      <td>5</td>\n      <td>0.480</td>\n    </tr>\n    <tr>\n      <th>1117954</th>\n      <td>1117954</td>\n      <td>7</td>\n      <td>3</td>\n      <td>9</td>\n      <td>4</td>\n      <td>6</td>\n      <td>5</td>\n      <td>9</td>\n      <td>1</td>\n      <td>3</td>\n      <td>...</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>6</td>\n      <td>5</td>\n      <td>5</td>\n      <td>2</td>\n      <td>4</td>\n      <td>0.485</td>\n    </tr>\n    <tr>\n      <th>1117955</th>\n      <td>1117955</td>\n      <td>7</td>\n      <td>3</td>\n      <td>3</td>\n      <td>7</td>\n      <td>5</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>6</td>\n      <td>...</td>\n      <td>6</td>\n      <td>8</td>\n      <td>5</td>\n      <td>3</td>\n      <td>4</td>\n      <td>6</td>\n      <td>7</td>\n      <td>6</td>\n      <td>4</td>\n      <td>0.495</td>\n    </tr>\n    <tr>\n      <th>1117956</th>\n      <td>1117956</td>\n      <td>4</td>\n      <td>5</td>\n      <td>6</td>\n      <td>9</td>\n      <td>5</td>\n      <td>5</td>\n      <td>2</td>\n      <td>8</td>\n      <td>4</td>\n      <td>...</td>\n      <td>4</td>\n      <td>8</td>\n      <td>6</td>\n      <td>5</td>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>7</td>\n      <td>8</td>\n      <td>0.560</td>\n    </tr>\n  </tbody>\n</table>\n<p>1117957 rows × 22 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_ds.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:11.466243Z","iopub.execute_input":"2024-05-04T04:26:11.466651Z","iopub.status.idle":"2024-05-04T04:26:11.498814Z","shell.execute_reply.started":"2024-05-04T04:26:11.466616Z","shell.execute_reply":"2024-05-04T04:26:11.497793Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"id                                 0\nMonsoonIntensity                   0\nTopographyDrainage                 0\nRiverManagement                    0\nDeforestation                      0\nUrbanization                       0\nClimateChange                      0\nDamsQuality                        0\nSiltation                          0\nAgriculturalPractices              0\nEncroachments                      0\nIneffectiveDisasterPreparedness    0\nDrainageSystems                    0\nCoastalVulnerability               0\nLandslides                         0\nWatersheds                         0\nDeterioratingInfrastructure        0\nPopulationScore                    0\nWetlandLoss                        0\nInadequatePlanning                 0\nPoliticalFactors                   0\nFloodProbability                   0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train_ds[train_ds.columns[1:]].corr()['FloodProbability'][ : ]","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:11.500459Z","iopub.execute_input":"2024-05-04T04:26:11.500804Z","iopub.status.idle":"2024-05-04T04:26:13.038958Z","shell.execute_reply.started":"2024-05-04T04:26:11.500769Z","shell.execute_reply":"2024-05-04T04:26:13.038146Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"MonsoonIntensity                   0.189098\nTopographyDrainage                 0.187635\nRiverManagement                    0.187131\nDeforestation                      0.184001\nUrbanization                       0.180861\nClimateChange                      0.184761\nDamsQuality                        0.187996\nSiltation                          0.186789\nAgriculturalPractices              0.183366\nEncroachments                      0.178841\nIneffectiveDisasterPreparedness    0.183109\nDrainageSystems                    0.179305\nCoastalVulnerability               0.177774\nLandslides                         0.185346\nWatersheds                         0.181907\nDeterioratingInfrastructure        0.190007\nPopulationScore                    0.185890\nWetlandLoss                        0.183396\nInadequatePlanning                 0.180968\nPoliticalFactors                   0.182417\nFloodProbability                   1.000000\nName: FloodProbability, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"train_ds=train_ds.drop(['id'],axis=1)\ntest_ds=test_ds.drop(['id'],axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:13.040307Z","iopub.execute_input":"2024-05-04T04:26:13.040887Z","iopub.status.idle":"2024-05-04T04:26:13.147820Z","shell.execute_reply.started":"2024-05-04T04:26:13.040857Z","shell.execute_reply":"2024-05-04T04:26:13.146722Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":"Memory  optimization","metadata":{}},{"cell_type":"code","source":"memory_usage=train_ds.memory_usage().sum()/1024**2\nprint(\"memory usage before optimization :{:.2f} MB\".format(memory_usage))","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:13.149413Z","iopub.execute_input":"2024-05-04T04:26:13.149772Z","iopub.status.idle":"2024-05-04T04:26:13.158028Z","shell.execute_reply.started":"2024-05-04T04:26:13.149713Z","shell.execute_reply":"2024-05-04T04:26:13.156819Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"memory usage before optimization :179.12 MB\n","output_type":"stream"}]},{"cell_type":"code","source":"memory_usage=test_ds.memory_usage().sum()/1024**2\nprint(\"memory usage before optimization :{:.2f} MB\".format(memory_usage))","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:13.159377Z","iopub.execute_input":"2024-05-04T04:26:13.159708Z","iopub.status.idle":"2024-05-04T04:26:13.171862Z","shell.execute_reply.started":"2024-05-04T04:26:13.159680Z","shell.execute_reply":"2024-05-04T04:26:13.170771Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"memory usage before optimization :113.72 MB\n","output_type":"stream"}]},{"cell_type":"code","source":"def memory_optimization(data_frame):\n    memory_usage=data_frame.memory_usage().sum()/1024**2\n    cols=data_frame.columns\n    for col in cols:\n        column_type=data_frame[col].dtype\n        \n        if column_type !=object:\n            col_min=data_frame[col].min()\n            col_max=data_frame[col].max()\n            if str(column_type)[:3]=='int':\n                if col_min > np.iinfo(np.int8).min and col_max< np.iinfo(np.int8).max:\n                    data_frame[col]=data_frame[col].astype(np.int8)\n                elif col_min > np.iinfo(np.int16).min and col_max< np.iinfo(np.int16).max:\n                    data_frame[col]=data_frame[col].astype(np.int16)\n                elif col_min > np.iinfo(np.int32).min and col_max< np.iinfo(np.int32).max:\n                    data_frame[col]=data_frame[col].astype(np.int32)\n                elif col_min > np.iinfo(np.int64).min and col_max< np.iinfo(np.int64).max:\n                    data_frame[col]=data_frame[col].astype(np.int64)\n            else:\n                if col_min > np.finfo(np.float16).min and col_max< np.finfo(np.float16).max:\n                    data_frame[col]=data_frame[col].astype(np.float16)\n                elif col_min > np.finfo(np.float32).min and col_max< np.finfo(np.float32).max:\n                    data_frame[col]=data_frame[col].astype(np.float32)\n                else:\n                    data_frame[col]=data_frame[col].astype(np.float64)\n        else:\n            data_frame[col]=data_frame[col].astype('object')\n    mem_usage=data_frame.memory_usage().sum()/1024**2\n    print(\"memory usage after optimization is: {:.2f} MB\".format(mem_usage))\n    print(\"memory usage reduce by: {:.2f}%\".format(100*(memory_usage-mem_usage)/memory_usage))\n    \n    return data_frame","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:13.176817Z","iopub.execute_input":"2024-05-04T04:26:13.177224Z","iopub.status.idle":"2024-05-04T04:26:13.192109Z","shell.execute_reply.started":"2024-05-04T04:26:13.177192Z","shell.execute_reply":"2024-05-04T04:26:13.190826Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"train=memory_optimization(train_ds)","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:13.193727Z","iopub.execute_input":"2024-05-04T04:26:13.194272Z","iopub.status.idle":"2024-05-04T04:26:13.292937Z","shell.execute_reply.started":"2024-05-04T04:26:13.194233Z","shell.execute_reply":"2024-05-04T04:26:13.291806Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"memory usage after optimization is: 23.46 MB\nmemory usage reduce by: 86.90%\n","output_type":"stream"}]},{"cell_type":"code","source":"test=memory_optimization(test_ds)","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:13.294600Z","iopub.execute_input":"2024-05-04T04:26:13.295063Z","iopub.status.idle":"2024-05-04T04:26:13.352370Z","shell.execute_reply.started":"2024-05-04T04:26:13.295020Z","shell.execute_reply":"2024-05-04T04:26:13.351074Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"memory usage after optimization is: 14.22 MB\nmemory usage reduce by: 87.50%\n","output_type":"stream"}]},{"cell_type":"code","source":"target=train['FloodProbability']\ntrain=train.drop(['FloodProbability'],axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:13.354100Z","iopub.execute_input":"2024-05-04T04:26:13.354676Z","iopub.status.idle":"2024-05-04T04:26:13.448530Z","shell.execute_reply.started":"2024-05-04T04:26:13.354636Z","shell.execute_reply":"2024-05-04T04:26:13.447229Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"target","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:13.449957Z","iopub.execute_input":"2024-05-04T04:26:13.450283Z","iopub.status.idle":"2024-05-04T04:26:13.459515Z","shell.execute_reply.started":"2024-05-04T04:26:13.450256Z","shell.execute_reply":"2024-05-04T04:26:13.458423Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"0          0.445068\n1          0.449951\n2          0.529785\n3          0.535156\n4          0.415039\n             ...   \n1117952    0.495117\n1117953    0.479980\n1117954    0.485107\n1117955    0.495117\n1117956    0.560059\nName: FloodProbability, Length: 1117957, dtype: float16"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\ntrain=scaler.fit_transform(train)\ntest=scaler.fit_transform(test)","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:27:25.838522Z","iopub.execute_input":"2024-05-04T04:27:25.838992Z","iopub.status.idle":"2024-05-04T04:27:26.222842Z","shell.execute_reply.started":"2024-05-04T04:27:25.838960Z","shell.execute_reply":"2024-05-04T04:27:26.221642Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestRegressor, AdaBoostRegressor, GradientBoostingRegressor\nfrom catboost import CatBoostRegressor\nfrom sklearn.datasets import make_regression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\n","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:27:30.462662Z","iopub.execute_input":"2024-05-04T04:27:30.463080Z","iopub.status.idle":"2024-05-04T04:27:30.883611Z","shell.execute_reply.started":"2024-05-04T04:27:30.463051Z","shell.execute_reply":"2024-05-04T04:27:30.882329Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(train, target, test_size=0.2, random_state=42)\nrf = RandomForestRegressor(n_estimators=100, random_state=42)\n#ada = AdaBoostRegressor(n_estimators=100, random_state=42)\n#gb = GradientBoostingRegressor(n_estimators=100, random_state=42)\ncat = CatBoostRegressor(iterations=100, learning_rate=0.1, random_state=42, verbose=0)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:27:34.350106Z","iopub.execute_input":"2024-05-04T04:27:34.350606Z","iopub.status.idle":"2024-05-04T04:27:34.819632Z","shell.execute_reply.started":"2024-05-04T04:27:34.350558Z","shell.execute_reply":"2024-05-04T04:27:34.818441Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"markdown","source":"#we already run some model for this data\n\nrf Mean Squared Error: 0.0008944333847660526\n\nada Mean Squared Error: 0.0010779311182171059\n\ngb Mean Squared Error: 0.0010023522426631348\n\ncat Mean Squared Error: 0.0006180235250844109","metadata":{}},{"cell_type":"code","source":"rf.fit(X_train, y_train)\n#ada.fit(X_train, y_train) \n#gb.fit(X_train, y_train)\ncat.fit(X_train, y_train)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:27:38.171213Z","iopub.execute_input":"2024-05-04T04:27:38.171604Z","iopub.status.idle":"2024-05-04T04:43:04.435518Z","shell.execute_reply.started":"2024-05-04T04:27:38.171574Z","shell.execute_reply":"2024-05-04T04:43:04.434335Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"<catboost.core.CatBoostRegressor at 0x7cff126dfdf0>"},"metadata":{}}]},{"cell_type":"code","source":"rf_pred = rf.predict(X_test)\n#ada_pred = ada.predict(X_test)\n#gb_pred = gb.predict(X_test)\ncat_pred = cat.predict(X_test)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:54:00.862019Z","iopub.execute_input":"2024-05-04T04:54:00.862460Z","iopub.status.idle":"2024-05-04T04:54:21.949719Z","shell.execute_reply.started":"2024-05-04T04:54:00.862424Z","shell.execute_reply":"2024-05-04T04:54:21.948455Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"rf_pred,cat_pred","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:14.085425Z","iopub.status.idle":"2024-05-04T04:26:14.085987Z","shell.execute_reply.started":"2024-05-04T04:26:14.085701Z","shell.execute_reply":"2024-05-04T04:26:14.085723Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"rf_mse = mean_squared_error(y_test, rf_pred)\nr2_rf = r2_score(y_test, rf_pred)\nprint(\"rf Mean Squared Error:\", rf_mse,\"r2 score:\",r2_rf)\n\n#ada_mse = mean_squared_error(y_test, ada_pred)\n#print(\"ada Mean Squared Error:\", ada_mse)\n\n#gb_mse = mean_squared_error(y_test, gb_pred)\n#print(\"gb Mean Squared Error:\", gb_mse)\n\ncat_mse = mean_squared_error(y_test, cat_pred)\nr2_ada = r2_score(y_test, cat_pred)\nprint(\"cat Mean Squared Error:\", cat_mse,\"r2 score:\",r2_ada)","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:54:49.094264Z","iopub.execute_input":"2024-05-04T04:54:49.094745Z","iopub.status.idle":"2024-05-04T04:54:49.145420Z","shell.execute_reply.started":"2024-05-04T04:54:49.094700Z","shell.execute_reply":"2024-05-04T04:54:49.144428Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"rf Mean Squared Error: 0.0008937310957120681 r2 score: 0.6561120626311808\ncat Mean Squared Error: 0.0006180235250844109 r2 score: 0.7621982313177168\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/numpy/lib/function_base.py:522: RuntimeWarning: overflow encountered in cast\n  scl = avg_as_array.dtype.type(a.size/avg_as_array.size)\n/opt/conda/lib/python3.10/site-packages/numpy/lib/function_base.py:522: RuntimeWarning: overflow encountered in cast\n  scl = avg_as_array.dtype.type(a.size/avg_as_array.size)\n","output_type":"stream"}]},{"cell_type":"code","source":"predictions = cat.predict(test)\npredictions","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:14.089624Z","iopub.status.idle":"2024-05-04T04:26:14.090149Z","shell.execute_reply.started":"2024-05-04T04:26:14.089887Z","shell.execute_reply":"2024-05-04T04:26:14.089909Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission=pd.read_csv('/kaggle/input/playground-series-s4e5/sample_submission.csv')\nsubmission=submission.drop(['FloodProbability'],axis=1)\nsubmission['FloodProbability']=pd.DataFrame(predictions)\nsubmission","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:14.091725Z","iopub.status.idle":"2024-05-04T04:26:14.092248Z","shell.execute_reply.started":"2024-05-04T04:26:14.091991Z","shell.execute_reply":"2024-05-04T04:26:14.092012Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#submission.to_csv('Submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:14.093566Z","iopub.status.idle":"2024-05-04T04:26:14.094126Z","shell.execute_reply.started":"2024-05-04T04:26:14.093861Z","shell.execute_reply":"2024-05-04T04:26:14.093883Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"#submission.to_csv('./Submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-05-04T04:26:14.095554Z","iopub.status.idle":"2024-05-04T04:26:14.096087Z","shell.execute_reply.started":"2024-05-04T04:26:14.095826Z","shell.execute_reply":"2024-05-04T04:26:14.095847Z"},"trusted":true},"execution_count":null,"outputs":[]}]}